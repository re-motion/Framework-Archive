<?xml version="1.0" encoding="utf-8" ?> 
<ILog>
  <Class>
    <remarks>
        The <see cref="ILog"/> interface is intended to implement adapters to various logging frameworks.
        Current implementation: <see cref="Log4NetLog"/>.
      <note type="inheritinfo">
        The <b>Windows Event Log</b>, exposed through the <see cref="System.Diagnostics.EventLogEntry"/> class, supports only <b>Event IDs</b> 
        within the range of unsigned 16-bit integers. Implementors must take care to properly truncate the <b>Event ID</b> before writing it to the 
        <b>Windows Event Log</b>. 
      </note>
    </remarks>
  </Class>
  <Log>
    <param name="logLevel">The <see cref="LogLevel"/> of the message to be logged.</param>
    <param name="eventID">The numeric identifier for the event.</param>
    <param name="message">The message object to log.</param>
    <param name="exceptionObject">The <see cref="Exception"/> to log, including its stack trace. Pass <see langword="null"/> to not log an exception.</param>
  </Log>
  <LogFormat>
    <param name="messageEnum">An <see cref="Enum"/> value that is used to supply the event id and the message or format string.</param>
    <param name="format">A String containing zero or more format items.</param>
    <param name="args">An Object array containing zero or more objects to format.</param>
  </LogFormat>
  <LogFormatWithEnum>
    <remarks>
      The underlying <see cref="Int32"/> value of the <paramref name="messageEnum"/> is used as event id and the <see cref="EnumDescription"/> utility
      is used to extract the message or format string to be logged.
    </remarks>
  </LogFormatWithEnum>
</ILog>