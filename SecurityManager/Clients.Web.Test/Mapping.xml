<?xml version="1.0" encoding="utf-8" ?>
<mapping application="Rubicon.SecurityManager" xmlns="http://www.rubicon-it.com/Data/DomainObjects/Mapping/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.rubicon-it.com/Data/DomainObjects/Mapping/1.0 ..\DomainObjects\mapping.xsd">
  <classes>
    <!-- Application domain -->
    <class id="File">
      <type>Rubicon.SecurityManager.Clients.Web.Test.Domain.File, Rubicon.SecurityManager.Clients.Web.Test</type>
      <entity name="File"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <property name="Confidentiality">
          <type>Rubicon.SecurityManager.Clients.Web.Test.Domain.Confidentiality, Rubicon.SecurityManager.Clients.Web.Test</type>
          <column>Confidentiality</column>
        </property>

        <relationProperty name="Client" relationID="ClientToFile" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="Creator" relationID="CreatorUserToFile" cardinality="one" isMandatory="true">
          <column>CreatorUserID</column>
          <oppositeClass>User</oppositeClass>
        </relationProperty>
        <relationProperty name="Clerk" relationID="ClerkUserToFile" cardinality="one" isMandatory="false">
          <column>ClerkUserID</column>
          <oppositeClass>User</oppositeClass>
        </relationProperty>
        <relationProperty name="Group" relationID="GroupToFile" cardinality="one" isMandatory="false">
          <column>GroupID</column>
          <oppositeClass>Group</oppositeClass>
        </relationProperty>
        <relationProperty name="Files" relationID="FileItemToFile" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="FileItem">
      <type>Rubicon.SecurityManager.Clients.Web.Test.Domain.FileItem, Rubicon.SecurityManager.Clients.Web.Test</type>
      <entity name="FileItem"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Client" relationID="ClientToFileItem" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="File" relationID="FileItemToFile" cardinality="one" isMandatory="true">
          <column>FileID</column>
        </relationProperty>
      </properties>
    </class>

    <!-- Organizational structure -->
    <class id="Client">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.Client, Rubicon.SecurityManager</type>
      <entity name="Client"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
      </properties>
    </class>

    <class id="Group">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.Group, Rubicon.SecurityManager</type>
      <entity name="Group"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <property name="ShortName">
          <type>string</type>
          <column>ShortName</column>
          <nullable>true</nullable>
          <maxLength>10</maxLength>
        </property>
        <property name="UniqueIdentifier">
          <type>string</type>
          <column>UniqueIdentifier</column>
          <nullable>false</nullable>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Client" relationID="ClientToGroup" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="Parent" relationID="ChildrenToParentGroup" cardinality="one" isMandatory="false">
          <column>ParentID</column>
        </relationProperty>
        <relationProperty name="Children" relationID="ChildrenToParentGroup" cardinality="many" isMandatory="false"/>
        <relationProperty name="GroupType" relationID="GroupTypeToGroup" cardinality="one" isMandatory="false">
          <column>GroupTypeID</column>
        </relationProperty>
        <relationProperty name="Roles" relationID="GroupToRole" cardinality="many" isMandatory="false" />
        <relationProperty name="AccessControlEntries" relationID="GroupToAccessControlEntry" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="GroupType">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.GroupType, Rubicon.SecurityManager</type>
      <entity name="GroupType"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Groups" relationID="GroupTypeToGroup" cardinality="many" isMandatory="false" />
        <relationProperty name="ConcretePositions" relationID="GroupTypeToConcretePosition" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToGroupType" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="AccessControlEntries" relationID="GroupTypeToAccessControlEntry" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="ConcretePosition">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.ConcretePosition, Rubicon.SecurityManager</type>
      <entity name="ConcretePosition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="GroupType" relationID="GroupTypeToConcretePosition" cardinality="one" isMandatory="true">
          <column>GroupTypeID</column>
        </relationProperty>
        <relationProperty name="Position" relationID="PositionToConcretePosition" cardinality="one" isMandatory="true">
          <column>PositionID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="Position">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.Position, Rubicon.SecurityManager</type>
      <entity name="Position"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="ConcretePositions" relationID="PositionToConcretePosition" cardinality="many" isMandatory="false" />
        <relationProperty name="Roles" relationID="PositionToRole" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToPosition" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="AccessControlEntries" relationID="PositionToAccessControlEntry" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="Role">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.Role, Rubicon.SecurityManager</type>
      <entity name="Role"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="Position" relationID="PositionToRole" cardinality="one" isMandatory="true">
          <column>PositionID</column>
        </relationProperty>
        <relationProperty name="Group" relationID="GroupToRole" cardinality="one" isMandatory="true">
          <column>GroupID</column>
        </relationProperty>
        <relationProperty name="User" relationID="UserToRole" cardinality="one" isMandatory="true">
          <column>UserID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="User">
      <type>Rubicon.SecurityManager.Domain.OrganizationalStructure.User, Rubicon.SecurityManager</type>
      <entity name="User"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Title">
          <type>string</type>
          <column>Title</column>
          <nullable>true</nullable>
          <maxLength>100</maxLength>
        </property>
        <property name="FirstName">
          <type>string</type>
          <column>FirstName</column>
          <nullable>true</nullable>
          <maxLength>100</maxLength>
        </property>
        <property name="LastName">
          <type>string</type>
          <column>LastName</column>
          <maxLength>100</maxLength>
        </property>
        <property name="UserName">
          <type>string</type>
          <column>UserName</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Roles" relationID="UserToRole" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToUser" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="Group" relationID="GroupToUser" cardinality="one" isMandatory="true">
          <column>GroupID</column>
          <oppositeClass>Group</oppositeClass>
        </relationProperty>
        <relationProperty name="AccessControlEntries" relationID="UserToAccessControlEntry" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <!-- Metadata -->
    <class id="MetadataObject">
      <type>Rubicon.SecurityManager.Domain.Metadata.MetadataObject, Rubicon.SecurityManager</type>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="MetadataItemID">
          <type>guid</type>
          <column>MetadataItemID</column>
        </property>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>200</maxLength>
        </property>
        <relationProperty name="LocalizedNames" relationID="MetadataObjectToLocalizedName" isMandatory="false" cardinality="many" />
      </properties>
    </class>

    <class id="EnumValueDefinition" baseClass="MetadataObject">
      <type>Rubicon.SecurityManager.Domain.Metadata.EnumValueDefinition, Rubicon.SecurityManager</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Value">
          <type>int32</type>
          <column>Value</column>
        </property>
      </properties>
    </class>

    <class id="SecurableClassDefinition" baseClass="MetadataObject">
      <type>Rubicon.SecurityManager.Domain.Metadata.SecurableClassDefinition, Rubicon.SecurityManager</type>
      <entity name="SecurableClassDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="ChangedAt">
          <type>dateTime</type>
          <column>ChangedAt</column>
          <nullable>false</nullable>
        </property>
        <relationProperty name="BaseClass" relationID="DerivedToBaseClass" cardinality="one" isMandatory="false">
          <column>BaseSecurableClassID</column>
        </relationProperty>
        <relationProperty name="DerivedClasses" relationID="DerivedToBaseClass" cardinality="many" isMandatory="false" />
        <relationProperty name="AccessTypeReferences" relationID="ClassToAccessTypeReference" cardinality="many" isMandatory="false" >
          <sortExpression>[Index] ASC</sortExpression>
        </relationProperty>
        <relationProperty name="StatePropertyReferences" relationID="ClassToStatePropertyReference" cardinality="many" isMandatory="false" />
        <relationProperty name="StateCombinations" relationID="ClassToStateCombination" cardinality="many" isMandatory="false" />
        <relationProperty name="AccessControlLists" relationID="ClassToAccessControlList" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="StatePropertyReference">
      <type>Rubicon.SecurityManager.Domain.Metadata.StatePropertyReference, Rubicon.SecurityManager</type>
      <entity name="StatePropertyReference"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="Class" relationID="ClassToStatePropertyReference" cardinality="one" isMandatory="true">
          <column>SecurableClassID</column>
        </relationProperty>
        <relationProperty name="StateProperty" relationID="StatePropertyToStatePropertyReference" cardinality="one" isMandatory="true">
          <column>StatePropertyID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="StatePropertyDefinition" baseClass="MetadataObject">
      <type>Rubicon.SecurityManager.Domain.Metadata.StatePropertyDefinition, Rubicon.SecurityManager</type>
      <entity name="StatePropertyDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="References" relationID="StatePropertyToStatePropertyReference" cardinality="many" isMandatory="false" />
        <relationProperty name="DefinedStates" relationID="StatePropertyToState" cardinality="many" isMandatory="true" />
      </properties>
    </class>

    <class id="StateDefinition" baseClass="EnumValueDefinition">
      <type>Rubicon.SecurityManager.Domain.Metadata.StateDefinition, Rubicon.SecurityManager</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="StateProperty" relationID="StatePropertyToState" cardinality="one" isMandatory="true">
          <column>StatePropertyID</column>
        </relationProperty>
        <relationProperty name="Usages" relationID="StateDefinitionToStateUsage" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="AccesTypeReference">
      <type>Rubicon.SecurityManager.Domain.Metadata.AccessTypeReference, Rubicon.SecurityManager</type>
      <entity name="AccessTypeReference"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Index">
          <type>int32</type>
          <column>Index</column>
        </property>
        <relationProperty name="Class" relationID="ClassToAccessTypeReference" cardinality="one" isMandatory="true">
          <column>SecurableClassID</column>
        </relationProperty>
        <relationProperty name="AccessType" relationID="AccessTypeToAccessTypeReference" cardinality="one" isMandatory="true">
          <column>AccessTypeID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="AccessTypeDefinition" baseClass="EnumValueDefinition">
      <type>Rubicon.SecurityManager.Domain.Metadata.AccessTypeDefinition, Rubicon.SecurityManager</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Index">
          <type>int32</type>
          <column>Index</column>
        </property>
        <relationProperty name="References" relationID="AccessTypeToAccessTypeReference" cardinality="many" isMandatory="false" />
        <relationProperty name="Permissions" relationID="AccessTypeDefinitionToPermission" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="AbstractRoleDefinition" baseClass="EnumValueDefinition">
      <type>Rubicon.SecurityManager.Domain.Metadata.AbstractRoleDefinition, Rubicon.SecurityManager</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="AccessControlEntries" relationID="AbstractRoleToAccessControlEntry" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <!-- Access Control -->
    <class id="StateCombination">
      <type>Rubicon.SecurityManager.Domain.AccessControl.StateCombination, Rubicon.SecurityManager</type>
      <entity name="StateCombination"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="StateUsages" relationID="StateCombinationToStateUsage" cardinality="many" isMandatory="false" />
        <relationProperty name="Class" relationID="ClassToStateCombination" cardinality="one" isMandatory="true">
          <column>SecurableClassID</column>
        </relationProperty>
        <relationProperty name="AccessControlList" relationID="AccessControlListToStateCombination" cardinality="one" isMandatory="true">
          <column>AccessControlListID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="StateUsage">
      <type>Rubicon.SecurityManager.Domain.AccessControl.StateUsage, Rubicon.SecurityManager</type>
      <entity name="StateUsage"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="StateCombination" relationID="StateCombinationToStateUsage" cardinality="one" isMandatory="true">
          <column>StateCombinationID</column>
        </relationProperty>
        <relationProperty name="StateDefinition" relationID="StateDefinitionToStateUsage" cardinality="one" isMandatory="true">
          <column>StateDefinitionID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="AccessControlList">
      <type>Rubicon.SecurityManager.Domain.AccessControl.AccessControlList, Rubicon.SecurityManager</type>
      <entity name="AccessControlList"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <relationProperty name="Class" relationID="ClassToAccessControlList" cardinality="one" isMandatory="true">
          <column>SecurableClassID</column>
        </relationProperty>
        <relationProperty name="StateCombinations" relationID="AccessControlListToStateCombination" cardinality="many" isMandatory="false" />
        <relationProperty name="AccessControlEntries" relationID="AccessControlListToAccessControlEntries" cardinality="many" isMandatory="true">
          <sortExpression>[Priority] DESC</sortExpression>
        </relationProperty>
      </properties>
    </class>

    <class id="AccessControlEntry">
      <type>Rubicon.SecurityManager.Domain.AccessControl.AccessControlEntry, Rubicon.SecurityManager</type>
      <entity name="AccessControlEntry"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Client">
          <type>Rubicon.SecurityManager.Domain.AccessControl.ClientSelection, Rubicon.SecurityManager</type>
          <column>ClientSelection</column>
        </property>
        <property name="Group">
          <type>Rubicon.SecurityManager.Domain.AccessControl.GroupSelection, Rubicon.SecurityManager</type>
          <column>GroupSelection</column>
        </property>
        <property name="User">
          <type>Rubicon.SecurityManager.Domain.AccessControl.UserSelection, Rubicon.SecurityManager</type>
          <column>UserSelection</column>
        </property>
        <property name="Priority">
          <type>int32</type>
          <column>Priority</column>
          <nullable>true</nullable>
        </property>
        <relationProperty name="AccessControlList" relationID="AccessControlListToAccessControlEntries" cardinality="one" isMandatory="true">
          <column>AccessControlListID</column>
        </relationProperty>
        <relationProperty name="SpecificGroup" relationID="GroupToAccessControlEntry" cardinality="one" isMandatory="false">
          <column>GroupID</column>
        </relationProperty>
        <relationProperty name="SpecificGroupType" relationID="GroupTypeToAccessControlEntry" cardinality="one" isMandatory="false">
          <column>GroupTypeID</column>
        </relationProperty>
        <relationProperty name="SpecificPosition" relationID="PositionToAccessControlEntry" cardinality="one" isMandatory="false">
          <column>PositionID</column>
        </relationProperty>
        <relationProperty name="SpecificUser" relationID="UserToAccessControlEntry" cardinality="one" isMandatory="false">
          <column>UserID</column>
        </relationProperty>
        <relationProperty name="SpecificAbstractRole" relationID="AbstractRoleToAccessControlEntry" cardinality="one" isMandatory="false">
          <column>AbstractRoleID</column>
        </relationProperty>
        <relationProperty name="Permissions" relationID="AccessControlEntryToPermission" cardinality="many" isMandatory="false" >
          <sortExpression>[Index] ASC</sortExpression>
        </relationProperty>
      </properties>
    </class>

    <class id="Permission">
      <type>Rubicon.SecurityManager.Domain.AccessControl.Permission, Rubicon.SecurityManager</type>
      <entity name="Permission"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Index">
          <type>int32</type>
          <column>Index</column>
        </property>
        <property name="Allowed">
          <type>boolean</type>
          <column>Allowed</column>
          <nullable>true</nullable>
        </property>
        <relationProperty name="AccessControlEntry" relationID="AccessControlEntryToPermission" cardinality="one" isMandatory="true">
          <column>AccessControlEntryID</column>
        </relationProperty>
        <relationProperty name="AccessType" relationID="AccessTypeDefinitionToPermission" cardinality="one" isMandatory="true">
          <column>AccessTypeDefinitionID</column>
        </relationProperty>
      </properties>
    </class>

    <!-- Metadata localization classes -->
    <class id="Culture">
      <type>Rubicon.SecurityManager.Domain.Metadata.Culture, Rubicon.SecurityManager</type>
      <entity name="Culture"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="CultureName">
          <type>string</type>
          <column>CultureName</column>
          <maxLength>10</maxLength>
        </property>
      </properties>
    </class>

    <class id="LocalizedName">
      <type>Rubicon.SecurityManager.Domain.Metadata.LocalizedName, Rubicon.SecurityManager</type>
      <entity name="LocalizedName"/>
      <storageProviderID>SecurityManager</storageProviderID>
      <properties>
        <property name="Text">
          <type>string</type>
          <column>Text</column>
          <maxLength>2147483647</maxLength>
        </property>
        <relationProperty name="Culture" relationID="CultureToLocalizedName" isMandatory="true" cardinality="one">
          <column>CultureID</column>
          <oppositeClass>Culture</oppositeClass>
        </relationProperty>
        <relationProperty name="MetadataObject" relationID="MetadataObjectToLocalizedName" isMandatory="true" cardinality="one">
          <column>MetadataObjectID</column>
        </relationProperty>
      </properties>
    </class>
  </classes>
</mapping>
