<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="rubicon.web" type="Rubicon.Web.Configuration.WebConfiguration, Rubicon.Web"/>
    <section name="rubicon.security" type="Rubicon.Security.Configuration.SecurityConfiguration, Rubicon.Security"/>
    <section name="rubicon.securityManager" type="Rubicon.SecurityManager.Configuration.SecurityManagerConfiguration, Rubicon.SecurityManager"/>
    <sectionGroup name="rubicon.data.domainObjects" type="Rubicon.Data.DomainObjects.Configuration.DomainObjectsConfiguration, Rubicon.Data.DomainObjects">
      <section name="storage" type="Rubicon.Data.DomainObjects.Persistence.Configuration.PersistenceConfiguration, Rubicon.Data.DomainObjects" />
      <section name="mapping" type="Rubicon.Data.DomainObjects.Mapping.Configuration.MappingLoaderConfiguration, Rubicon.Data.DomainObjects" />
      <!--<section name="query" type="Rubicon.Data.DomainObjects.Queries.Configuration.MappingConfiguration, Rubicon.Data.DomainObjects" />-->
    </sectionGroup>
  </configSections>

  <rubicon.web xmlns="http://www.rubicon-it.com/commons/web/configuration">
    <executionEngine functionTimeout="20" refreshInterval="10" defaultWxeHandler="WxeHandler.ashx" urlMappingFile="~/UrlMapping.xml"/>
  </rubicon.web>
  <rubicon.security xmlns="http://www.rubicon-it.com/Security/Configuration" defaultSecurityProvider="SecurityManager" defaultUserProvider="HttpContext">
  </rubicon.security>
  <rubicon.securityManager xmlns="http://www.rubicon-it.com/SecurityManager/Configuration">
  </rubicon.securityManager>

  <rubicon.data.domainObjects xmlns="http://www.rubicon-it.com/Data/DomainObjects/Configuration">
    <mapping>
      <loader type="Rubicon.Data.DomainObjects.Legacy::ConfigurationLoader.XmlBasedConfigurationLoader.MappingLoader"/>
    </mapping>
    <storage defaultProviderDefinition="SecurityManager">
      <providerDefinitions>
        <add type="Rubicon.Data.DomainObjects::Persistence.Rdbms.RdbmsProviderDefinition"
            name="SecurityManager"
            providerType="Rubicon.SecurityManager::Persistence.SecurityManagerSqlProvider"
            connectionString="RubiconSecurityManagerWebClientTest"/>
      </providerDefinitions>
    </storage>
  </rubicon.data.domainObjects>

  <appSettings>
    <add key="Rubicon.Data.DomainObjects.Mapping.ConfigurationFile" value="C:\Development\libraries\Commons\trunk\SecurityManager\Clients.Web.Test\Mapping.xml"/>
    <add key="Rubicon.Data.DomainObjects.Queries.Configuration.ConfigurationFile" value="C:\Development\libraries\Commons\trunk\SecurityManager\Clients.Web.Test\Queries.xml"/>
  </appSettings>

  <connectionStrings>
    <add name="RubiconSecurityManagerWebClientTest" connectionString="Integrated Security=SSPI;Initial Catalog=RubiconSecurityManagerWebClientTest;Data Source=localhost"/>
  </connectionStrings>

  <system.web>

    <httpHandlers>
      <add verb="*" path="*.wxe" type="Rubicon.Web.ExecutionEngine.WxeHandler, Rubicon.Web"/>
    </httpHandlers>

    <!-- 
          Set compilation debug="true" to insert debugging 
          symbols into the compiled page. Because this 
          affects performance, set this value to true only 
          during development.
      -->
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
        <add assembly="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <!--
          The <authentication> section enables configuration 
          of the security authentication mode used by 
          ASP.NET to identify an incoming user. 
      -->
    <authentication mode="Windows"/>
    <identity impersonate="true"/>
    <!--
          The <customErrors> section enables configuration 
          of what to do if/when an unhandled error occurs 
          during the execution of a request. Specifically, 
          it enables developers to configure html error pages 
          to be displayed in place of a error stack trace.

      <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
          <error statusCode="403" redirect="NoAccess.htm" />
          <error statusCode="404" redirect="FileNotFound.htm" />
      </customErrors>
      -->
  </system.web>
</configuration>