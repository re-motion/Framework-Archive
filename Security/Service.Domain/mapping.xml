<?xml version="1.0" encoding="utf-8" ?>
<mapping application="Rubicon.Security.Service" xmlns="http://www.rubicon-it.com/Data/DomainObjects/Mapping/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.rubicon-it.com/Data/DomainObjects/Mapping/1.0 ..\DomainObjects\mapping.xsd">
  <classes>

    <!-- Organizational structure -->
    <class id="Client">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.Client, Rubicon.Security.Service.Domain</type>
      <entity name="Client"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
      </properties>
    </class>

    <class id="Group">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.Group, Rubicon.Security.Service.Domain</type>
      <entity name="Group"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <property name="ShortName">
          <type>string</type>
          <column>ShortName</column>
          <maxLength>10</maxLength>
        </property>
        <relationProperty name="Client" relationID="ClientToGroup" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="Parent" relationID="ChildrenToParentGroup" cardinality="one" isMandatory="false">
          <column>ParentID</column>
        </relationProperty>
        <relationProperty name="Children" relationID="ChildrenToParentGroup" cardinality="many" isMandatory="false"/>
        <relationProperty name="GroupType" relationID="GroupTypeToGroup" cardinality="one" isMandatory="false">
          <column>GroupTypeID</column>
        </relationProperty>
        <relationProperty name="Roles" relationID="GroupToRole" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="GroupType">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.GroupType, Rubicon.Security.Service.Domain</type>
      <entity name="GroupType"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Groups" relationID="GroupTypeToGroup" cardinality="many" isMandatory="false" />
        <relationProperty name="ConcretePositions" relationID="GroupTypeToConcretePosition" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToGroupType" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
      </properties>
    </class>

    <class id="ConcretePosition">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.ConcretePosition, Rubicon.Security.Service.Domain</type>
      <entity name="ConcretePosition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="GroupType" relationID="GroupTypeToConcretePosition" cardinality="one" isMandatory="true">
          <column>GroupTypeID</column>
        </relationProperty>
        <relationProperty name="Position" relationID="PositionToConcretePosition" cardinality="one" isMandatory="true">
          <column>PositionID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="Position">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.Position, Rubicon.Security.Service.Domain</type>
      <entity name="Position"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="ConcretePositions" relationID="PositionToConcretePosition" cardinality="many" isMandatory="false" />
        <relationProperty name="Roles" relationID="PositionToRole" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToPosition" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
      </properties>
    </class>

    <class id="Role">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.Role, Rubicon.Security.Service.Domain</type>
      <entity name="Role"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <relationProperty name="Position" relationID="PositionToRole" cardinality="one" isMandatory="true">
          <column>PositionID</column>
        </relationProperty>
        <relationProperty name="Group" relationID="GroupToRole" cardinality="one" isMandatory="true">
          <column>GroupID</column>
        </relationProperty>
        <relationProperty name="User" relationID="UserToRole" cardinality="one" isMandatory="true">
          <column>UserID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="User">
      <type>Rubicon.Security.Service.Domain.OrganizationalStructure.User, Rubicon.Security.Service.Domain</type>
      <entity name="User"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Title">
          <type>string</type>
          <column>Title</column>
          <maxLength>100</maxLength>
        </property>
        <property name="FirstName">
          <type>string</type>
          <column>FirstName</column>
          <maxLength>100</maxLength>
        </property>
        <property name="LastName">
          <type>string</type>
          <column>LastName</column>
          <maxLength>100</maxLength>
        </property>
        <property name="UserName">
          <type>string</type>
          <column>UserName</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="Roles" relationID="UserToRole" cardinality="many" isMandatory="false" />
        <relationProperty name="Client" relationID="ClientToUser" cardinality="one" isMandatory="true">
          <column>ClientID</column>
          <oppositeClass>Client</oppositeClass>
        </relationProperty>
        <relationProperty name="Group" relationID="GroupToUser" cardinality="one" isMandatory="true">
          <column>GroupID</column>
          <oppositeClass>Group</oppositeClass>
        </relationProperty>
      </properties>
    </class>

    <!-- Metadata -->
    <class id="EnumValueDefinition">
      <type>Rubicon.Security.Service.Domain.Metadata.EnumValueDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <property name="Value">
          <type>int64</type>
          <column>Value</column>
        </property>
      </properties>
    </class>

    <class id="EnumValueDefinitionWithIdentity" baseClass="EnumValueDefinition">
      <type>Rubicon.Security.Service.Domain.Metadata.EnumValueDefinitionWithIdentity, Rubicon.Security.Service.Domain</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="MetadataItemID">
          <type>guid</type>
          <column>MetadataItemID</column>
        </property>
      </properties>
    </class>
    
    <class id="SecurableClassDefinition">
      <type>Rubicon.Security.Service.Domain.Metadata.SecurableClassDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="SecurableClassDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="MetadataItemID">
          <type>guid</type>
          <column>MetadataItemID</column>
        </property>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="BaseClass" relationID="DerivedToBaseClass" cardinality="one" isMandatory="false">
          <column>BaseClassID</column>
        </relationProperty>
        <relationProperty name="DerivedClasses" relationID="DerivedToBaseClass" cardinality="many" isMandatory="false" />
        <relationProperty name="AccessTypeReferences" relationID="ClassToAccessTypeReference" cardinality="many" isMandatory="false" />
        <relationProperty name="StatePropertyReferences" relationID="ClassToStatePropertyReference" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="StatePropertyReference">
      <type>Rubicon.Security.Service.Domain.Metadata.StatePropertyReference, Rubicon.Security.Service.Domain</type>
      <entity name="StatePropertyReference"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <relationProperty name="Class" relationID="ClassToStatePropertyReference" cardinality="one" isMandatory="true">
          <column>ClassID</column>
        </relationProperty>
        <relationProperty name="StateProperty" relationID="StatePropertyToStatePropertyReference" cardinality="one" isMandatory="true">
          <column>StatePropertyID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="StatePropertyDefinition">
      <type>Rubicon.Security.Service.Domain.Metadata.StatePropertyDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="StatePropertyDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <property name="MetadataItemID">
          <type>guid</type>
          <column>MetadataItemID</column>
        </property>
        <property name="Name">
          <type>string</type>
          <column>Name</column>
          <maxLength>100</maxLength>
        </property>
        <relationProperty name="References" relationID="StatePropertyToStatePropertyReference" cardinality="many" isMandatory="false" />
        <relationProperty name="DefinedStates" relationID="StatePropertyToState" cardinality="many" isMandatory="true" />
      </properties>
    </class>

    <class id="StateDefinition" baseClass="EnumValueDefinition">
      <type>Rubicon.Security.Service.Domain.Metadata.StateDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <relationProperty name="StateProperty" relationID="StatePropertyToState" cardinality="one" isMandatory="true">
          <column>StatePropertyID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="AccesTypeReference">
      <type>Rubicon.Security.Service.Domain.Metadata.AccessTypeReference, Rubicon.Security.Service.Domain</type>
      <entity name="AccessTypeReference"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <relationProperty name="Class" relationID="ClassToAccessTypeReference" cardinality="one" isMandatory="true">
          <column>ClassID</column>
        </relationProperty>
        <relationProperty name="AccessType" relationID="AccessTypeToAccessTypeReference" cardinality="one" isMandatory="true">
          <column>AccessTypeID</column>
        </relationProperty>
      </properties>
    </class>

    <class id="AccessTypeDefinition" baseClass="EnumValueDefinitionWithIdentity">
      <type>Rubicon.Security.Service.Domain.Metadata.AccessTypeDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties>
        <relationProperty name="References" relationID="AccessTypeToAccessTypeReference" cardinality="many" isMandatory="false" />
      </properties>
    </class>

    <class id="AbstractRoleDefinition" baseClass="EnumValueDefinitionWithIdentity">
      <type>Rubicon.Security.Service.Domain.Metadata.AbstractRoleDefinition, Rubicon.Security.Service.Domain</type>
      <entity name="EnumValueDefinition"/>
      <storageProviderID>SecurityServiceDomain</storageProviderID>
      <properties />
    </class>
  </classes>
</mapping>
