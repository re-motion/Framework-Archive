<?xml version="1.0" encoding="utf-8" ?> 
<BocList>
  <Class>
    <remarks>
    
      <h4 class="dtH4">Supported Data Types</h4>
      <para>
        The control's <see cref="Value"/> can be assigned an <see cref="IList"/> of 
        <see cref="IBusinessObject"/> instances as well as <see langword="null"/>. 
      </para><para>
        The control's <see cref="Property"/> supports the <see cref="IBusinessObjectReferenceProperty"/>.
      </para>

      <h4 class="dtH4">Usage Notes</h4>      
      <para>
        Place an <see cref="HtmlHeadContents"/> control on every <b>ASPX</b> page displaying the 
        <b>BocBooleanValue</b>.
      </para><para>
        Provide the external resources for this control. See <see cref="T:Rubicon.Web.ResourceUrlResolver"/> 
        for details on this subject.
      </para><para>
        See the <see cref="CreateValidators"/> method for the validators provided by this control.        
      </para><para>
        If the <see cref="BusinessObjectBoundWebControl.PropertyIdentifier"/> property is not set, the 
        control is unbound. The <see cref="Value"/> property must be accessed programmatically to display the 
        current value.
      </para><para>
        The <see cref="BusinessObjectBoundWebControl.DataSource"/> must be set in order to evaluate the
        <see cref="BusinessObjectPropertyPath"/> of a column. If you do not wish to use databinding 
        (e.g. for a page with a search result), use the <see cref="BusinessObjectReferenceSearchDataSourceControl"/> 
        as the control's <see cref="DataSource"/>.
      </para><para>
        The control provides a default <b>CSS Class</b>, applied to the top level element: <c>bocList</c>.
      </para><para>
        The control does not support auto-postback for the selected value. Auto-postback is only used for commands
        and the drop down list displaying the <see cref="AvailableColumnDefinitionSets"/>.
      </para><para>
        The control's <b>Enabled</b> flag is not fully supported by the <b>BocList</b>.
      </para>

      <h4 class="dtH4">Localization Support</h4>
      <para>
        The resources required by this control are defined by the <see cref="BocList.ResourceIdentifier"/> 
        enum. See the <b>ResourceIdentifier</b>'s documentation for details on localization.
      </para><para>
        The control supports resource dispatching to its properties through the <see cref="ResourceDispatcher"/>.
        Use the following resource identifiers for dispatching strings to the <b>BocList</b>.
      </para>
      <list type="table">
        <listheader>
          <term>Property</term>
          <description>Resource Identifier</description>
        </listheader>
        <item>
          <term> <see cref="AdditionalColumnsTitle"/> </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:AdditionalColumnsTitle </para>
            <para> e.g. auto:MyBocList:AdditionalColumnsTitle </para>
          </description>
        </item>
        <item>
          <term> <see cref="ErrorMessage"/> </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:ErrorMessage </para>
            <para> e.g. auto:MyBocList:ErrorMessage </para>
          </description>
        </item>
        <item>
          <term> <see cref="ListMenuItems"/>[x].Text </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:ListMenuItems:&lt;Menu Item ID&gt;:Text </para>
            <para> e.g. auto:MyBocList:ListMenuItems:MyItem:Text </para>
          </description>
        </item>
        <item>
          <term> <see cref="OptionsTitle"/> </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:OptionsTitle </para>
            <para> e.g. auto:MyBocList:OptionsTitle </para>
          </description>
        </item>
        <item>
          <term> <see cref="OptionsMenuItems"/>[x].Text </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:OptionsMenuItems:&lt;Menu Item ID&gt;:Text </para>
            <para> e.g. auto:MyBocList:OptionsMenuItems:MyItem:Text </para>
          </description>
        </item>
        <item>
          <term> <see cref="PageInfo"/> </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:PageInfo </para>
            <para> e.g. auto:MyBocList:PageInfo </para>
          </description>
        </item>
        <item>
          <term> <see cref="FixedColumns"/>[x].ColumnTitle </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:FixedColumns:&lt;Column ID&gt;:ColumnTitle </para>
            <para> e.g. auto:MyBocList:FixedColumns:MyItem:ColumnTitle </para>
            <para> Applies to all columns. </para>
          </description>
        </item>
        <item>
          <term> <see cref="FixedColumns"/>[x].Text </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:FixedColumns:&lt;Column ID&gt;:Text </para>
            <para> e.g. auto:MyBocList:FixedColumns:MyItem:Text </para>
            <para> Applies to columns of type <see cref="BocCommandColumnDefinition"/>. </para>
          </description>
        </item>
        <item>
          <term> <see cref="FixedColumns"/>[x].CancelText </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:FixedColumns:&lt;Column ID&gt;:CancelText </para>
            <para> e.g. auto:MyBocList:FixedColumns:MyItem:CancelText </para>
            <para> Applies to columns of type <see cref="BocEditDetailsColumnDefinition"/>. </para>
          </description>
        </item>
        <item>
          <term> <see cref="FixedColumns"/>[x].EditText </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:FixedColumns:&lt;Column ID&gt;:EditText </para>
            <para> e.g. auto:MyBocList:FixedColumns:MyItem:EditText </para>
            <para> Applies to columns of type <see cref="BocEditDetailsColumnDefinition"/>. </para>
          </description>
        </item>
        <item>
          <term> <see cref="FixedColumns"/>[x].SaveText </term>
          <description>
            <para> &lt;BocList Resource ID&gt;:FixedColumns:&lt;Column ID&gt;:SaveText </para>
            <para> e.g. auto:MyBocList:FixedColumns:MyItem:SaveText </para>
            <para> Applies to columns of type <see cref="BocEditDetailsColumnDefinition"/>. </para>
          </description>
        </item>
      </list>
 
      <h4 class="dtH4">Defining the Columns</h4>  
      <para>
        Using the <see cref="FixedColumns"/> property it is possible to define the columns displayed by the 
        <b>BocList</b>. In case you wish to display all properties as provided by the class, you can use
        the <see cref="ShowAllProperties"/> flag to automatically render a column for each property.
      </para><para>
        The following table lists the available columns.
      </para>
      <list type="table">
        <listheader>
          <term>Column Type</term>
          <description>Description</description>
        </listheader>
        <item>
          <term> <see cref="BocSimpleColumnDefinition"/> </term>
          <description>
            <para>
              Used to display a single value accessed through a <see cref="BusinessObjectPropertyPath"/>. 
              This column supports inline editing of the value as well as a <see cref="BocListItemCommand"/> 
              accessible through the rendered value.
            </para><para>
              You can register an event handler for the command click event with the <see cref="ListItemCommandClick"/> 
              event source.
            </para>
          </description>
        </item>
        <item>
          <term> <see cref="BocCompoundColumnDefinition"/> </term>
          <description>
            <para>
              Used to display a list of values concatenated by usie of a format string. Each value is accessed through 
              its own <see cref="BusinessObjectPropertyPath"/>. This column supports a <see cref="BocListItemCommand"/> 
              accessible through the rendered value string.
            </para><para>
              You can register an event handler for the command click event with the <see cref="ListItemCommandClick"/> 
              event source.
            </para>
          </description>
        </item>
        <item>
          <term> <see cref="BocCommandColumnDefinition"/> </term>
          <description>
            <para>
              Used to display a <see cref="BocListItemCommand"/> accessible through a static text and/or an icon.
            </para><para>
              You can register an event handler for the command click event with the <see cref="ListItemCommandClick"/> 
              event source.
            </para>
          </description>
        </item>
        <item>
          <term> <see cref="BocEditDetailsColumnDefinition"/> </term>
          <description>
            <para>
              Used to display predefined commands for switching a row into editing mode and back to read-only mode.
            </para><para>
              See the <see href="#EditDetails">Inline Editing</see> section for details.
            </para>
            </description>
        </item>
        <item>
          <term> <see cref="BocCustomColumnDefinition"/> </term>
          <description>
            <para>
              Used to provide a custom rendering and event handling method for the cell. This column can be used
              to display a number of commands, a command that depends on the state of the <see cref="IBusinessObject"/>
              rendered in this row or to format the value in a way not supported by the simple or compound columns.
            </para><para>
              You can register an event handler for the command click event with the <see cref="CustomCellClick"/> 
              event source.
            </para>
          </description>
        </item>
      </list>
      <para>
        If the <see cref="EnableIcon"/> flag is <see langword="true"/>, the <b>BocList</b> displays an icon for each 
        row's <see cref="IBusinessObject"/> in front of the first <see cref="BocSimpleColumnDefinition"/> or 
        <see cref="BocCommandColumnDefinition"/>. This icon is gotten through the 
        <see cref="IBusinessObjectWebUIService.GetIcon">IBusinessObjectWebUIService.GetIcon</see> method. The service
        is accessed through the <see cref="IBusinessObjectClass"/> of the row's object.
      </para>
      
      <h4 class="dtH4">Additional Column Sets (Views)</h4>      
      <para>
        Using the <see cref="AvailableColumnDefinitionSets"/> property it is possible to provide different views 
        for the <b>BocList</b>. Each view (<see cref="BocColumnDefinitionSet"/>) consists of zero or more columns.
      </para><para>
        The views can be switched by a drop down box displayed to the right of the list of values. The drop down box
        can be hidden using the <see cref="ShowAdditionalColumnsList"/> flag. The drop down box is also hidden 
        automatically if only a single view is available or the list is empty and the 
        <see cref="ShowEmptyListReadOnlyMode"/> and <see cref="ShowEmptyListEditMode"/> flags are set to 
        <see langword="false"/>.
      </para><para>
        The currently selected view can be changed programmatically by using the 
        <see cref="SelectedColumnDefinitionSet"/> property. If this property is assigned before the 
        <b>Process Postback Data</b> phase of the page life cycle and the selected view is also changed on the client, 
        the view selected on the client side will take precendence. If the property is assigned during the 
        <b>Postback Event Handling</b> or <b>PreRender</b> phase of the page life cycle, or if the client side value 
        is not changed, the programmatically assigned value will be used.
      </para> 
      
      <h4 class="dtH4">Paging</h4>
      <para>
        It is possible to provide each <b>BocList</b> with a maximum <see cref="PageSize"/>. If the number of rows 
        exceeds the page size, it is possible to page through the values one page at a time or move to the first or 
        last page.
      </para><para>
        The text rendered for the current page information can be set through the <see cref="PageInfo"/> property.
        By setting the <see cref="AlwaysShowPageInfo"/> flag to <see langword="false"/>, the current page information
        and the paging buttons are only rendered if more than one page is available.
      </para>

      <h4 class="dtH4">Options Menu and List Menu</h4>
      <para>
        The <b>BocList</b> supports both a drop down menu whose menu items are only visible while the menu is open,
        and an in-place (list) menu whose menu items are always visible. Use the <see cref="OptionsMenuItems"/> and
        the <see cref="ListMenuItems"/> properties to define the <see cref="BocMenuItem"/> objects available in the 
        respective menus.
      </para><para>
        The menus are displayed to the right of the list of values. The can be hidden individually using the
        <see cref="ShowOptionsMenu"/> and <see cref="ShowListMenu"/> properties. The menus are also hidden 
        automatically in case they do not provide a menu item or the list is empty and the 
        <see cref="ShowMenuForEmptyListReadOnlyMode"/> and <see cref="ShowMenuForEmptyListEditMode"/> flags are set to
        <see langword="false"/>.
      </para><para>
        You can register an event handler for the click event with the <see cref="MenuItemClick"/> event source.
      </para><para>
        See the <b>Menu</b> section in the <b>Properties</b> window of the Visual Studio .NET Designer for a complete 
        list of the properties available for configuring the menus.
      </para>
      
      <h4 class="dtH4">Sorting</h4>
      <para>
        The <b>BocList</b>'s rows can be sorted by one or more of its columns. Use the <see cref="EnableSorting"/> and
        the <see cref="EnableMultipleSorting"/> flags to enable or disable the sorting functionality. If sorted by
        multiple columns, the <b>BocList</b> displays the sorting order next to the sorting buttons of the individual
        columns. You can hide this index by setting the <see cref="ShowSortingOrder"/> flag to <see langword="false"/>.
      </para><para>
        If the columns used for sorting include a column from the current view, changing the view will remove the 
        column from the sorting keys.
      </para><para>
        The sorting order can also be defined programmatically using the <see cref="SetSortingOrder"/> method. If the 
        sorting order is set before the <b>Process Postback Data</b> phase of a postback, the postback will override 
        the programmatic settings.
      </para>
         
      <h4 class="dtH4">Row Selection</h4>
      <para>
        The <b>BocList</b> supports selecting a subset of the currently displayed rows. The selection mode can be set
        by using the <see cref="Selection"/> property. You can use the mouse in combination with the control key to 
        select multiple rows or deselect them individually.
      </para><para>
        The selected rows or objects can be queried using the <see cref="GetSelectedRows"/> and 
        <see cref="GetSelectedBusinessObjects"/> methods. A new selection can be made through the 
        <see cref="SetSelectedRows"/> and <see cref="SetSelectedBusinessObjects"/> methods. 
      </para>
      
      <h4 class="dtH4"><a name="EditDetails">Inline Editing</a></h4><!-- HTML Help requires separate anchor tag for target -->   
      <para>
        Through the use of inline editing it is possible to modify the business objects in the individual rows, 
        one row at a time.
      </para>
      
    </remarks>
  </Class>
  <OnListItemCommandClick>
    <param name="column"> 
      The <see cref="BocCommandEnabledColumnDefinition"/> whose command was clicked. 
    </param>
    <param name="listIndex">
      An index that indtifies the <see cref="IBusinessObject"/> with which the clicked command is associated.
    </param>
    <param name="businessObject">
      The <see cref="IBusinessObject"/> with which the clicked command is associated.
    </param>
  </OnListItemCommandClick>
  <OnMenuItemEventCommandClick>
    <param name="menuItem"> 
      The <see cref="BocMenuItem"/> whose command was clicked. 
    </param>
  </OnMenuItemEventCommandClick>
  <OnMenuItemWxeFunctionCommandClick>
    <param name="menuItem"> 
      The <see cref="BocMenuItem"/> whose command was clicked. 
    </param>
  </OnMenuItemWxeFunctionCommandClick>
</BocList>

