<?xml version="1.0" encoding="utf-8" ?> 
<BocReferenceValue>
  <Class>
    <remarks>
      <h4 class="dtH4">Supported Data Types</h4>
      <para>
        The control's <see cref="Value"/> can be assigned <see cref="IBusinessObjectWithIdentity"/> values 
        or <see langword="null"/>. 
      </para><para>
        The control's <see cref="Property"/> supports the <see cref="IBusinessObjectReferenceProperty"/>.
      </para>
      
      <h4 class="dtH4">Usage Notes</h4>      
      <para>
        See the <see cref="CreateValidators"/> method for the validators provided by this control.        
      </para><para>
        If the <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        the <see cref="BusinessObjectBoundWebControl.PropertyIdentifier"/> properties are not set, the 
        control is unbound. In that case, the <see cref="Property"/> and the <see cref="Value"/> properties must be 
        set programmatically. In order to get the value after the user has changed it, <see cref="Value"/> must be
        read.
      </para><para>
        The <see cref="Property"/> must be set in order to get the <see cref="Value"/> after a postback. 
        This means the latest time to set the <b>Property</b> is before a call to <see cref="SaveValue"/>.
      </para><para>
        The control provides a default <b>CSS Class</b>, applied to the top level element: <c>bocReferenceValue</c>.
      </para><para>
        The control supports auto-postback. Use the <see cref="DropDownListStyle"/>'s 
        <see cref="Rubicon.ObjectBinding.Web.Controls.DropDownListStyle.AutoPostBack"/> property to enable this
        behavior.
      </para><para>
        If no <see cref="Select"/> statement is provided, use <see cref="SetBusinessObjectList"/>
        to fill the list of <see cref="IBusinessObjectWithIdentity"/> objects. This call is only required during the
        first page life cycle.
      </para>

      <h4 class="dtH4">Localization Support</h4>
      <para>
        The resources required by this control are defined by the 
        <see cref="BocReferenceValue.ResourceIdentifier"/> enum. See the <b>ResourceIdentifier</b>'s documentation
        for details on localization.
      </para><para>
        The control supports resource dispatching to its properties through the <see cref="ResourceDispatcher"/>.
        Use the following resource identifiers for dispatching strings to the <b>BocReferenceValue</b>.
      </para>
      <list type="table">
        <listheader>
          <term>Property</term>
          <description>Resource Identifier</description>
        </listheader>
        <item>
          <term> <see cref="ErrorMessage"/> </term>
          <description>
            <para> &lt;BocReferenceValue Resource ID&gt;:ErrorMessage </para>
            <para> e.g. auto:MyBocReferenceValue:ErrorMessage </para>
          </description>
        </item>
        <item>
          <term> <see cref="OptionsTitle"/> </term>
          <description>
            <para> &lt;BocReferenceValue Resource ID&gt;:OptionsTitle </para>
            <para> e.g. auto:MyBocReferenceValue:OptionsTitle </para>
          </description>
        </item>
        <item>
          <term> <see cref="OptionsMenuItems"/>[x].Text </term>
          <description>
            <para> &lt;BocReferenceValue Resource ID&gt;:OptionsMenuItems:&lt;Menu Item ID&gt;:Text </para>
            <para> e.g. auto:MyBocReferenceValue:OptionsMenuItems:MyItem:Text </para>
          </description>
        </item>
        <item>
          <term> <see cref="Command"/>.ToolTip </term>
          <description>
            <para> &lt;BocReferenceValue Resource ID&gt;:Command:ToolTip </para>
            <para> e.g. auto:MyBocReferenceValue:Command:ToolTip </para>
          </description>
        </item>
      </list>
      
      <h4 class="dtH4">Inner Workings</h4>
      <para>
        During edit mode, the control is displayed using a <see cref="System.Web.UI.WebControls.DropDownList"/>.
      </para><para>
        During read-only mode, the control's value is displayed using a <see cref="System.Web.UI.WebControls.Label"/>.
      </para><para>
        The control also offers an <see cref="Image"/> to be displayed in front of the value, as well as 
        a <see cref="BocCommand"/> and a <see cref="DropDownMenu"/> for additional functionality.
      </para><para>
        Use the <see cref="DropDownList"/>, <see cref="Label"/>, <see cref="Icon"/> and <see cref="OptionsMenu"/> 
        properties to access these controls directly.
      </para><para>
        The control uses the view state to cache the value between postbacks. If the control is data bound,
        a call to <see cref="SaveValue"/> with <b>interim</b> set <see langword="true"/> is required to save the
        value back into the data source.
      </para>

      <list type="table">
        <listheader>
          <term>State</term>
          <description>Behaviour</description>
        </listheader>
        <item>
          <term>
            Read-Only / <see cref="Value"/> is not <see langword="null"/>
          </term>
          <description>
            Displays the <see cref="IBusinessObjectWithIdentity.DisplayName"/> for <see cref="Value"/> 
            and the icon returned by <see cref="IBusinessObjectWebUIService.GetIcon"/>, 
            if <see cref="EnableIcon"/> is <see langword="true"/>.
          </description>
        </item>
        <item>
          <term>
            Read-Only / <see cref="Value"/> is <see langword="null"/>
          </term>
          <description>
            Displays no text and the icon returned by <see cref="IBusinessObjectWebUIService.GetIcon"/> for
            <see langword="null"/>, if <see cref="EnableIcon"/> is <see langword="true"/>.
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is not <see langword="null"/>
          </term>
          <description>
            Text is automatically provided by the <see cref="DropDownList"/>.
            Displays the icon returned by <see cref="IBusinessObjectWebUIService.GetIcon"/>, 
            if <see cref="EnableIcon"/> is <see langword="true"/>.
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is <see langword="null"/>
          </term>
          <description>
            <para>
              Text is automatically provided by the <see cref="DropDownList"/>.
              Displays the icon returned <see cref="IBusinessObjectWebUIService.GetIcon"/> for
              <see langword="null"/>, if <see cref="EnableIcon"/> is <see langword="true"/>.
            </para><para>
              If the control is required, the undefined item is removed once a valid item is
              selected.
            </para>
          </description>
        </item>
        <item>
          <term>
            Edit Mode / <see cref="Value"/> is set to an item not in the list.
          </term>
          <description>
            <para>
              The new item is added to the list and displayed in the <see cref="DropDownList"/>. 
            </para><para>
              If <see cref="Value"/> is null but the control is required, the undefined item is
              added to the <see cref="DropDownList"/> unitl the selection is again changed to a
              valid item.
            </para>
          </description>
        </item>
      </list>
    </remarks>
  </Class>
  <LoadPostData>
    <remarks>
      <para>
        Sets the new value and the <see cref="IsDirty"/> flag if the value has changed.
      </para><para>
        Evaluates the value of the <see cref="DropDownList"/>.
      </para>
      <note type="inheritinfo">
        Overrive this method to change the way of detecting a changed value when read from the 
        <paramref name="postCollection"/>.
      </note>
    </remarks>
    <param name="postDataKey"> The key identifier for this control. </param>
    <param name="postCollection"> The collection of all incoming name values.  </param>
    <returns>
      <see langword="true"/> if the server control's state changes as a result of the post back; 
      otherwise <see langword="false"/>.
    </returns>
  </LoadPostData>
  <LoadValue>
    <remarks>
      <para>
        Loads the <see cref="Value"/> from the <see cref="BusinessObjectBoundWebControl.DataSource"/> 
        if <paramref name="interim"/> is <see langword="false"/>. 
      </para><para>
        Requires a <see cref="Property"/>, a <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        a <see cref="BusinessObjectDataSourceControl.BusinessObject">DataSource.BusinessObject</see>.
      </para>
    </remarks>
  </LoadValue>
  <SaveValue>
    <remarks>
      <para>
        Saves the <see cref="Value"/> into the <see cref="BusinessObjectBoundWebControl.DataSource"/> 
        if <paramref name="interim"/> is <see langword="false"/> and the control's 
        <see cref="BusinessObjectBoundModifiableWebControl.IsReadOnly"/> property evaluates <see langword="false"/>. 
      </para><para>
        Requires a <see cref="Property"/>, a <see cref="BusinessObjectBoundWebControl.DataSource"/> and 
        a <see cref="BusinessObjectDataSourceControl.BusinessObject">DataSource.BusinessObject</see>.
      </para>
    </remarks>
  </SaveValue>
  <CreateValidators>
    <remarks>
      Generates a <see cref="CompareValidator"/> checking that the selected item is not the null-item if the 
      control is in edit mode and input is required.
    </remarks>
  </CreateValidators>
  <GetOptionsMenuItemsForPreviousLifeCycle>
    <remarks>
      <para>
        The method is called with the original list of menu items, which can then be modified by an overridden
        version. The base method does not have to be called by the override. This approach was chosen because
        the base method is not necessarily able to get the original list of menu items on its own.
      </para><para>
        The <see cref="BocMenuItem"/> objects displayed during the last page life cycle are required 
        to correctly handle the events raised on the <see cref="BocReferenceValue"/>'s <see cref="OptionsMenu"/>.
      </para>
      <note>
        Make the method <b>protected virtual</b> should this feature be ever required and change the 
        method's body to return the passed <paramref name="menuItems"/>.
      </note>
      <note type="inheritinfo">
        Override this method to modify the menu items displayed in the <see cref="BocReferenceValue"/>'s
        <see cref="OptionsMenu"/> during the previous page life cycle.
      </note>
    </remarks>
    <param name="menuItems"> 
      The <see cref="BocMenuItem"/> array containing the menu items available in the options menu. 
    </param>
    <returns> The <see cref="BocMenuItem"/> array after it has been modified by this method or it's override. </returns>
  </GetOptionsMenuItemsForPreviousLifeCycle>
  <GetOptionsMenuItems>
    <remarks>
      <para>
        The method is called with the original list of menu items, which can then be modified by an overridden
        version. The base method does not have to be called by the override. This approach was chosen because
        the base method is not necessarily able to get the original list of menu items on its own.
      </para>
      <note type="inheritinfo">
        Override this method to modify the menu items displayed in the <see cref="BocReferenceValue"/>'s
        <see cref="OptionsMenu"/> during the current page life cycle.
      </note>
    </remarks>
    <param name="menuItems"> 
      The <see cref="BocMenuItem"/> array containing the menu items available in the options menu. 
    </param>
    <returns> The <see cref="BocMenuItem"/> array after it has been modified by this method or it's override. </returns>
  </GetOptionsMenuItems>
  <Value>
    <value> 
      The <see cref="IBusinessObjectWithIdentity"/> currently displayed 
      or <see langword="null"/> if no item / the null item is selected.
    </value>
    <remarks>
      Only the <see cref="IBusinessObjectWithIdentity.UniqueIdentifier"/> of the value is cached between postbacks. 
      In order to return a value, the control requires the <see cref="Property"/> to be set. 
      The <see cref="Property"/>'s <see cref="IBusinessObjectReferenceProperty.ReferenceClass"/> is then used to get the 
      <see cref="IBusinessObjectWithIdentity"/> for the cached <b>ID</b>.
    </remarks>
  </Value>
</BocReferenceValue>